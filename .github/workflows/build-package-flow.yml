name:  Build & Test workflow

on:
  workflow_call:
    inputs:
      cmd-arguments:
        description: 'Command line arguments'
        default: '/overrideconfig mode=ContinuousDeployment'
        required: false
        type: string
      artifact-name:
        description: 'A name to be used to publish artifact'
        default: 'Package'
        required: false
        type: string
      solution-path:
        description: 'Path and name of the solution file'
        default: 'package.sln'
        required: false
        type: string


jobs:

  build:
    runs-on: windows-latest
    env:
      DOTNET_NOLOGO: '1'
      DOTNET_CLI_TELEMETRY_OPTOUT: '1'
      PackageOutputPath: '${{ github.workspace }}\package'

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Label Fixed Issues
      uses: gh-bot/fix-labeler@master        

    - name: GitVersion
      run: | 
        choco install gitversion.portable -pre -y --no-progress
        gitversion /l console /output buildserver ${{ inputs.cmd-arguments }}         

    # - name: Setup .NET Core SDK
    #   uses: actions/setup-dotnet@v3
    #   with:
    #     dotnet-version: '6.0'

    - name: Add GitHub nuget feed
      run: | 
        dotnet nuget add source "https://nuget.pkg.github.com/unitycontainer/index.json" -n github -u unitycontainer -p ${{secrets.GITHUB_TOKEN}} --store-password-in-clear-text

    - name: Build
      env:
        VersionMajor: '${{ env.GitVersion_Major }}'
        VersionMinor: '${{ env.GitVersion_Minor }}'
        VersionPatch: '${{ env.GitVersion_Patch }}'
        Version: '${{ env.GitVersion_MajorMinorPatch }}'
        FileVersion: '${{ env.GitVersion_AssemblySemFileVer }}'
        PackageVersion: '${{ env.GitVersion_FullSemVer }}'
        AssemblyVersion: '${{ env.GitVersion_AssemblySemVer }}'
        InformationalVersion: '${{ env.GitVersion_InformationalVersion }}'
      run: | 
        dotnet msbuild -property:Configuration=Release -verbosity:m -restore:True ${{ inputs.solution-path }}

    - name: Test
      run: | 
        dotnet test --no-restore --no-build --configuration Release ${{ inputs.solution-path }}
    
    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: '${{ inputs.artifact-name }}'
        path: '${{ env.PackageOutputPath }}'
