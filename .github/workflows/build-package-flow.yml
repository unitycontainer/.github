name:  Build & Test workflow

on:
  workflow_call:
    inputs:
      version-mode:
        description: 'A semver format mode generated by GitVersion'
        required: false
        type: string
        default: 'ContinuousDeployment'
      solution-file:
        description: 'Path and name of the solution file'
        required: false
        type: string
        default: 'package.sln'


jobs:

  build:
    runs-on: windows-latest
    env:
      DOTNET_NOLOGO: '1'
      DOTNET_CLI_TELEMETRY_OPTOUT: '1'
      PackageOutputPath: '${{ github.workspace }}\package'

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: GitVersion
      run: | 
        choco install gitversion.portable -pre -y --no-progress
        gitversion /l console /output buildserver /overrideconfig mode=${{ inputs.version-mode }} 

    # - name: Setup .NET Core SDK
    #   uses: actions/setup-dotnet@v3.0.3
    #   with:
    #     dotnet-version: '6.0'

    - name: Add GitHub nuget feed
      run: | 
        dotnet nuget add source "https://nuget.pkg.github.com/unitycontainer/index.json" -n github -u unitycontainer -p ${{secrets.GITHUB_TOKEN}} --store-password-in-clear-text

    - name: Build
      env:
        VersionMajor: '${{ env.GitVersion_Major }}'
        VersionMinor: '${{ env.GitVersion_Minor }}'
        VersionPatch: '${{ env.GitVersion_Patch }}'
        Version: '${{ env.GitVersion_MajorMinorPatch }}'
        FileVersion: '${{ env.GitVersion_AssemblySemFileVer }}'
        PackageVersion: '${{ env.GitVersion_SemVer }}'
        AssemblyVersion: '${{ env.GitVersion_AssemblySemVer }}'
        InformationalVersion: '${{ env.GitVersion_InformationalVersion }}'
      run: | 
        dotnet msbuild -property:Configuration=Release -verbosity:m -restore:True ${{ inputs.solution-file }}

    - name: Test
      run: | 
        dotnet test --no-restore --no-build --configuration Release ${{ inputs.solution-file }}

    # - name: Publish Local Package
    #   run: |
    #     dotnet nuget push '${{ env.PackageOutputPath }}\*' --skip-duplicate --source github
    - name: Upload artifact
      uses: actions/upload-artifact@v1.0.0
      with:
        name: Package
        path: '${{ env.PackageOutputPath }}'
        
    - name: Label Fixed Issues
      uses: gh-bot/fix-labeler@master        
